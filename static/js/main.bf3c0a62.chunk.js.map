{"version":3,"sources":["components/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","components/Button/ControlButton.module.scss","components/Grid/Grid.module.css","util/array.js","util/gridEncoding.js","util/useInterval.js","store/actions/actionTypes.js","components/Button/Button.js","components/Button/ControlButton.js","components/SideDrawer/DrawerToggle/DrawerToggle.js","components/Square/Square.js","components/Grid/Grid.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/SideDrawer/SideDrawer.js","App.js","store/actions/session.js","reportWebVitals.js","store/reducers/session.js","index.js","App.module.css","components/Button/Button.module.scss","components/Square/Square.module.css","components/SideDrawer/SideDrawer.module.css"],"names":["module","exports","arrayEquals","a","b","Array","isArray","length","every","val","index","shuffle","array","randomIndex","temp","matrixCopy","i","Math","floor","random","encodeGame","startGrid","targetGrid","Error","gameId","forEach","digit","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","INITIALIZE_SESSION","SET_DIFFICULTY_HARD","SET_DIFFICULTY_NORMAL","INCREMENT_SOLVED","INCREMENT_SKIPPED","Button","props","stylesArray","classes","size","push","Menu","Control","Next","normal","Normal","next","on","On","className","join","onClick","type","disabled","children","ControlButton","Triangle","TriangleUp","TriangleDown","TriangleLeft","TriangleRight","Rotate","RotateLeft","RotateRight","aria-label","replace","str","toUpperCase","drawerToggle","styles","DrawerToggle","click","Square","squareClasses","mini","MiniSquare","color","Blue","Red","Green","Grid","gridClasses","movement","MoveUp","MoveDown","MoveLeft","MoveRight","isSolved","Solved","Row","matrix","backdrop","show","Backdrop","Modal","nextProps","nextState","this","Fragment","modalClosed","style","transform","opacity","Component","SideDrawer","attachedClasses","Close","open","Open","CloseButton","connect","state","numberSolved","session","numberSkipped","difficulty","dispatch","setDifficulty","difficultyAction","actionTypes","actions","incrementSkipped","incrementSolved","initializeSession","useState","target","moveCount","game","setGame","gameRef","showSideDrawer","setShowSideDrawer","isAutoplay","isStart","showMenu","resetDelay","isFirstLoad","gameSettings","setGameSettings","setMovement","slide","randomize","handleKeyDown","e","key","keyCode","newGame","numberColors","numberSquaresMax","randomColor","numSquaresMax","numSquares","newMatrix","updatedMatrix","updatedTarget","console","log","moveType","referenceMatrix","updateMatrix","setTimeout","useGameRef","newMoveCount","prevGame","updatedGame","startGameHandler","toggleStart","window","addEventListener","removeEventListener","App","Top","Title","GridContainer","CenterRow","NextButton","ControlBar","Score","Panel","TargetTitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","updatedSkipped","updatedASolved","composeEnhancers","compose","rootReducer","combineReducers","sessionReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf3c0a62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__2Pl3i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1PApi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3V2qq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ControlButton\":\"ControlButton_ControlButton__2NvXY\",\"Triangle\":\"ControlButton_Triangle__1I1ev\",\"Rotate\":\"ControlButton_Rotate__1M9ZR\",\"TriangleUp\":\"ControlButton_TriangleUp__2Icwb\",\"TriangleDown\":\"ControlButton_TriangleDown__21t4w\",\"TriangleLeft\":\"ControlButton_TriangleLeft__5WE_R\",\"TriangleRight\":\"ControlButton_TriangleRight__2mn0H\",\"RotateRight\":\"ControlButton_RotateRight__2H_Id\",\"RotateLeft\":\"ControlButton_RotateLeft__QwpET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Grid\":\"Grid_Grid__1p7dW\",\"RotateLeft\":\"Grid_RotateLeft__Hhcwo\",\"rotateLeft\":\"Grid_rotateLeft__NifF-\",\"RotateRight\":\"Grid_RotateRight__1s6Iw\",\"rotateRight\":\"Grid_rotateRight__2VGH2\",\"MoveUp\":\"Grid_MoveUp__3LPuw\",\"moveUp\":\"Grid_moveUp__3Wjzw\",\"MoveDown\":\"Grid_MoveDown__1VSIT\",\"moveDown\":\"Grid_moveDown__2qiQ6\",\"MoveLeft\":\"Grid_MoveLeft__24Urm\",\"moveLeft\":\"Grid_moveLeft__1rndx\",\"MoveRight\":\"Grid_MoveRight__2fMhb\",\"moveRight\":\"Grid_moveRight__3gLMQ\",\"Solved\":\"Grid_Solved__3VxYT\",\"solved\":\"Grid_solved__1_3Ur\",\"Row\":\"Grid_Row__6MaIY\",\"MiniRow\":\"Grid_MiniRow__1gG3C\"};","function arrayEquals(a, b) {\r\n    return Array.isArray(a) &&\r\n        Array.isArray(b) &&\r\n        a.length === b.length &&\r\n        a.every((val, index) => val === b[index]);\r\n}\r\n\r\nfunction shuffle(array) {\r\n    const matrixCopy = [...array];\r\n    let randomIndex;\r\n    let temp;\r\n\r\n    for (let i = matrixCopy.length - 1; i > 0; i--) {\r\n        randomIndex = Math.floor(Math.random() * (i + 1));\r\n\r\n        temp = matrixCopy[i];\r\n        matrixCopy[i] = matrixCopy[randomIndex];\r\n        matrixCopy[randomIndex] = temp;\r\n    }\r\n\r\n    return matrixCopy;\r\n}\r\n\r\n\r\nexport { arrayEquals, shuffle };","export function decodeGame(gameId) {\r\n    if ((gameId.length !== 18) || (typeof gameId === 'string')) {\r\n        throw new Error('gameId should should be a string of length 18.');\r\n    }\r\n\r\n    let startGrid = [];\r\n    let targetGrid = [];\r\n\r\n    for (let i = 0; i < 18; i++) {\r\n        if (i < 9) {\r\n            startGrid.push(gameId[i])\r\n        } else {\r\n            targetGrid.push(gameId[i])\r\n        }\r\n    }\r\n\r\n    return { startGrid, targetGrid }\r\n}\r\n\r\nexport function encodeGame(startGrid, targetGrid) {\r\n    if (\r\n        (!Array.isArray(startGrid)) ||\r\n        (!Array.isArray(targetGrid)) ||\r\n        (startGrid.length !== 9) ||\r\n        (targetGrid.length !== 9)\r\n    ) {\r\n        throw new Error('startGrid and targetGrid should be arrays of length 9.');\r\n    }\r\n\r\n    let gameId = \"\";\r\n\r\n    startGrid.forEach(digit => {\r\n        gameId += digit;\r\n    });\r\n\r\n    targetGrid.forEach(digit => {\r\n        gameId += digit;\r\n    });\r\n\r\n    return gameId;\r\n}","import { useEffect, useRef } from 'react';\r\n\r\nfunction useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  }\r\n\r\nexport default useInterval;","export const INITIALIZE_SESSION = \"INITIALIZE_SESSION\";\r\nexport const SET_DIFFICULTY_HARD = \"SET_DIFFICULTY_HARD\";\r\nexport const SET_DIFFICULTY_NORMAL = \"SET_DIFFICULTY_NORMAL\";\r\nexport const INCREMENT_SOLVED = \"INCREMENT_SOLVED\";\r\nexport const INCREMENT_SKIPPED = \"INCREMENT_SKIPPED\";","import React from 'react';\r\n\r\nimport classes from './Button.module.scss';\r\n\r\nconst Button = (props) => {\r\n    let stylesArray = [classes.Button];\r\n\r\n    switch (props.size) {\r\n        case 'menu':\r\n            stylesArray.push(classes.Menu);\r\n            break;\r\n        case 'control':\r\n            stylesArray.push(classes.Control);\r\n            break;\r\n        case 'next':\r\n            stylesArray.push(classes.Next);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    if (props.normal) {\r\n        stylesArray.push(classes.Normal)\r\n    }\r\n\r\n    if (props.next) {\r\n        stylesArray.push(classes.Next)\r\n    }\r\n\r\n    if (props.on) {\r\n        stylesArray.push(classes.On)\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className={stylesArray.join(' ')}\r\n            onClick={props.onClick}\r\n            type={props.type}\r\n            disabled={props.disabled}>{props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport classes from './ControlButton.module.scss';\r\n\r\nconst ControlButton = (props) => {\r\n    let stylesArray = [classes.ControlButton];\r\n\r\n    switch (props.type) {\r\n        case 'moveUp':\r\n            stylesArray.push(classes.Triangle);\r\n            stylesArray.push(classes.TriangleUp);\r\n            break;\r\n        case 'moveDown':\r\n            stylesArray.push(classes.Triangle);\r\n            stylesArray.push(classes.TriangleDown);\r\n            break;\r\n        case 'moveLeft':\r\n            stylesArray.push(classes.Triangle);\r\n            stylesArray.push(classes.TriangleLeft);\r\n            break;\r\n        case 'moveRight':\r\n            stylesArray.push(classes.Triangle);\r\n            stylesArray.push(classes.TriangleRight);\r\n            break;\r\n        case 'rotateLeft':\r\n            stylesArray.push(classes.Rotate);\r\n            stylesArray.push(classes.RotateLeft);\r\n            break;\r\n        case 'rotateRight':\r\n            stylesArray.push(classes.Rotate);\r\n            stylesArray.push(classes.RotateRight);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    if (props.normal) {\r\n        stylesArray.push(classes.Normal)\r\n    }\r\n\r\n    if (props.next) {\r\n        stylesArray.push(classes.Next)\r\n    }\r\n\r\n    if (props.on) {\r\n        stylesArray.push(classes.On)\r\n    }\r\n\r\n    return (\r\n        <button\r\n            aria-label={props.type.replace(/([A-Z])/g, ' $1').replace(/^./, function(str){ return str.toUpperCase(); })}\r\n            className={stylesArray.join(' ')}\r\n            onClick={props.onClick}\r\n            type={props.type}\r\n            disabled={props.disabled}>{props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ControlButton;","import React from 'react';\r\n\r\nimport styles from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div \r\n        className={styles.DrawerToggle}\r\n        onClick={props.click}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n)\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Square.module.css'\r\n\r\nconst Square = props => {\r\n    let squareClasses = []\r\n    if (props.mini) {\r\n        squareClasses.push(classes.MiniSquare)\r\n    } else {\r\n        squareClasses.push(classes.Square)\r\n    }\r\n\r\n    switch (props.color) {\r\n        case 1:\r\n            squareClasses.push(classes.Blue)\r\n            break;\r\n        case 2:\r\n            squareClasses.push(classes.Red)\r\n            break;\r\n        case 3:\r\n            squareClasses.push(classes.Green)\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className={squareClasses.join(' ')}></div>\r\n    )\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\n\r\nimport Square from '../Square/Square';\r\nimport classes from './Grid.module.css';\r\n\r\nconst Grid = props => {\r\n    let gridClasses = []\r\n\r\n    switch (props.movement) {\r\n        case 'rotateLeft':\r\n            gridClasses = [classes.Grid, classes.RotateLeft];\r\n            break;\r\n        case 'rotateRight':\r\n            gridClasses = [classes.Grid, classes.RotateRight];\r\n            break;\r\n        case 'moveUp':\r\n            gridClasses = [classes.Grid, classes.MoveUp];\r\n            break;\r\n        case 'moveDown':\r\n            gridClasses = [classes.Grid, classes.MoveDown];\r\n            break;\r\n        case 'moveLeft':\r\n            gridClasses = [classes.Grid, classes.MoveLeft];\r\n            break;\r\n        case 'moveRight':\r\n            gridClasses = [classes.Grid, classes.MoveRight];\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    if (props.isSolved) {\r\n        gridClasses.push(classes.Solved)\r\n    }\r\n\r\n    if (gridClasses) {\r\n        gridClasses = gridClasses.join(' ')\r\n    }\r\n\r\n    return (\r\n        <div className={gridClasses}>\r\n            <div className={classes.Row}>\r\n                <Square color={props.matrix[0]} mini={props.mini} />\r\n                <Square color={props.matrix[1]} mini={props.mini} />\r\n                <Square color={props.matrix[2]} mini={props.mini} />\r\n            </div>\r\n            <div className={classes.Row}>\r\n                <Square color={props.matrix[3]} mini={props.mini} />\r\n                <Square color={props.matrix[4]} mini={props.mini} />\r\n                <Square color={props.matrix[5]} mini={props.mini} />\r\n            </div>\r\n            <div className={classes.Row}>\r\n                <Square color={props.matrix[6]} mini={props.mini} />\r\n                <Square color={props.matrix[7]} mini={props.mini} />\r\n                <Square color={props.matrix[8]} mini={props.mini} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.click}></div> : null\r\n)\r\n\r\nexport default backdrop;","import React, { Component } from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Backdrop show={this.props.show} click={this.props.modalClosed} />\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport styles from './SideDrawer.module.css';\r\n\r\nexport default function SideDrawer(props) {\r\n    let attachedClasses = [styles.SideDrawer, styles.Close]\r\n    if (props.open) {\r\n        attachedClasses = [styles.SideDrawer, styles.Open]\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div></div>\r\n            <div className={attachedClasses.join(' ')} >\r\n                {props.children}\r\n\r\n                <button\r\n                    className={styles.CloseButton} \r\n                    onClick={props.click}>Close</button>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","import { useState, useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './App.module.css';\nimport { arrayEquals, shuffle } from './util/array';\nimport { encodeGame } from './util/gridEncoding';\nimport useInterval from './util/useInterval';\nimport * as actions from './store/actions/session';\n\nimport Button from './components/Button/Button';\nimport ControlButton from './components/Button/ControlButton';\nimport DrawerToggle from './components/SideDrawer/DrawerToggle/DrawerToggle';\nimport Grid from './components/Grid/Grid';\nimport Modal from './components/UI/Modal/Modal';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\n\nfunction App(props) {\n\n  // State\n  const [game, setGame] = useState({\n    matrix: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    target: [0, 0, 0, 0, 0, 0, 0, 0, 0],\n    gameId: \"\",\n    isSolved: null,\n    moveCount: 0\n  })\n\n  const gameRef = useRef(game);\n\n  const [showSideDrawer, setShowSideDrawer] = useState(false);\n\n  const [gameSettings, setGameSettings] = useState({\n    isAutoplay: false,\n    isStart: true,\n    showMenu: false,\n    difficulty: 'normal',\n    resetDelay: 500,\n    isFirstLoad: true\n  })\n\n  const [movement, setMovement] = useState('')\n\n  // Hooks\n  useInterval(() => {\n    if (gameSettings.isAutoplay) {\n      if (!game.isSolved) {\n        randomize();\n      } else {\n        setGameSettings({\n          ...gameSettings,\n          isAutoplay: false\n        })\n      }\n    }\n  })\n\n  // TODO: Keyhandlers\n\n  const handleKeyDown = (e) => {\n    if (gameRef.current.isSolved) {\n      return\n    }\n    if (e.key === 'w' || e.key === 'W' || e.keyCode === 38) {\n      slide('moveUp', true)\n    }\n    if (e.key === 's' || e.key === 'S' || e.keyCode === 40) slide('moveDown', true)\n    if (e.key === 'a' || e.key === 'A' || e.keyCode === 37) slide('moveLeft', true)\n    if (e.key === 'd' || e.key === 'D' || e.keyCode === 39) slide('moveRight', true)\n    if (e.key === 'q' || e.key === 'Q' || e.keyCode === 33) slide('rotateLeft', true)\n    if (e.key === 'e' || e.key === 'E' || e.keyCode === 34) slide('rotateRight', true)\n  }\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown)\n    };\n  })\n\n  // Function Declarations\n  function newGame(difficulty) {\n    let numberColors = 1;\n    let numberSquaresMax = 4;\n\n    if (difficulty === 'hard') {\n      numberColors = 2;\n      numberSquaresMax = 5;\n    }\n\n    let numSquaresMax = Math.floor(Math.random() * (numberSquaresMax - 1)) + 2;\n    let randomColor;\n    let numSquares = 0;\n\n    const newMatrix = [];\n    for (let i = 0; i < 9; i++) {\n      if (numSquares < numSquaresMax) {\n        randomColor = Math.floor(Math.random() * (numberColors));\n\n        if (i < 2 && numberColors > 1) {\n          if (i === 0) {\n            randomColor = 0;\n          }\n          if (i === 1) {\n            randomColor = 1;\n          }\n        }\n        switch (randomColor) {\n          case 0:\n            newMatrix.push(1)\n            break;\n          case 1:\n            newMatrix.push(2)\n            break;\n          case 2:\n            newMatrix.push(3)\n            break;\n          default:\n            newMatrix.push(0)\n            break;\n        }\n        numSquares += 1;\n      } else {\n        newMatrix.push(0)\n      }\n    }\n\n    const updatedMatrix = shuffle(newMatrix);\n    let updatedTarget = shuffle(newMatrix);\n\n    if (arrayEquals(updatedMatrix, updatedTarget)) {\n      while (arrayEquals(updatedMatrix, updatedTarget)) {\n        updatedTarget = shuffle(newMatrix);\n      }\n    }\n\n    const newGame = {\n      matrix: updatedMatrix,\n      target: updatedTarget,\n      gameId: encodeGame(updatedMatrix, updatedTarget),\n      isSolved: false,\n      moveCount: 0\n    }\n\n    setGame(newGame)\n    gameRef.current = newGame;\n    console.log(gameRef.current)\n  }\n\n  function slide(moveType, referenceMatrix = false) {\n    let matrix = game.matrix;\n    let target = game.target;\n\n    if (referenceMatrix) {\n      matrix = gameRef.current.matrix;\n      target = gameRef.current.target;\n    }\n\n    console.log(matrix)\n\n    switch (moveType) {\n      case 'rotateLeft':\n        matrix = [matrix[1], matrix[2], matrix[5], matrix[0], matrix[4], matrix[8], matrix[3], matrix[6], matrix[7]]\n        break;\n      case 'rotateRight':\n        matrix = [matrix[3], matrix[0], matrix[1], matrix[6], matrix[4], matrix[2], matrix[7], matrix[8], matrix[5]]\n        break;\n      case 'moveUp':\n        matrix = [matrix[3], matrix[4], matrix[5], matrix[6], matrix[7], matrix[8], matrix[0], matrix[1], matrix[2]]\n        break;\n      case 'moveDown':\n        matrix = [matrix[6], matrix[7], matrix[8], matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]]\n        break;\n      case 'moveLeft':\n        matrix = [matrix[1], matrix[2], matrix[0], matrix[4], matrix[5], matrix[3], matrix[7], matrix[8], matrix[6]]\n        break;\n      case 'moveRight':\n        matrix = [matrix[2], matrix[0], matrix[1], matrix[5], matrix[3], matrix[4], matrix[8], matrix[6], matrix[7]]\n        break;\n      default:\n        break;\n    }\n\n    console.log(matrix, target)\n    updateMatrix(matrix, true)\n\n    setMovement(moveType)\n    setTimeout(() => setMovement(''), 500);\n  }\n\n  function updateMatrix(updatedMatrix, useGameRef = false) {\n    let newMoveCount = game.moveCount + 1;\n    let isSolved = false;\n    let prevGame = game;\n    let target = game.target\n\n    if (useGameRef) {\n      newMoveCount = gameRef.current.moveCount + 1;\n      prevGame = gameRef.current;\n      target = gameRef.current.target;\n    }\n\n    if (arrayEquals(updatedMatrix, target)) {\n      isSolved = true;\n      if (gameSettings.isAutoplay) {\n        props.incrementSkipped()\n      } else {\n        props.incrementSolved();\n      }\n    }\n\n    const updatedGame = {\n      ...prevGame,\n      matrix: updatedMatrix,\n      isSolved,\n      moveCount: newMoveCount\n    }\n\n    setGame(updatedGame);\n    gameRef.current = updatedGame;\n\n  }\n\n  function randomize() {\n    let option = Math.floor(Math.random() * 5);\n\n    switch (option) {\n      case 0:\n        slide(\"rotateLeft\");\n        break;\n      case 1:\n        slide(\"rotateRight\");\n        break;\n      case 2:\n        slide(\"moveUp\");\n        break;\n      case 3:\n        slide(\"moveDown\");\n        break;\n      case 4:\n        slide(\"moveLeft\");\n        break;\n      case 5:\n        slide(\"moveRight\");\n        break;\n      default:\n        break;\n    }\n  }\n\n  function toggleAutoplay() {\n    const isAutoplay = !gameSettings.isAutoplay;\n    setGameSettings({\n      ...gameSettings,\n      isAutoplay: isAutoplay\n    })\n  }\n\n  function startGameHandler(difficulty) {\n    props.initializeSession();\n    props.setDifficulty(difficulty);\n    setGameSettings({\n      ...gameSettings\n    })\n    newGame(difficulty);\n    toggleStart();\n    setShowSideDrawer(false);\n  }\n\n  function toggleStart() {\n    let isStart = !gameSettings.isStart;\n    setGameSettings({\n      ...gameSettings,\n      isStart: isStart\n    })\n  }\n\n  // Conditional JSX Elements\n  let next = null;\n  if (game.isSolved) {\n    next = <Button size=\"next\" onClick={() => newGame(props.difficulty)}>Next &rarr;</Button>\n  }\n\n  // JSX\n  return (\n    <div className={classes.App}>\n      <Modal show={gameSettings.isStart} modalClosed={toggleStart}>\n        <h2>Select Difficulty:</h2>\n        <Button size=\"menu\" onClick={() => startGameHandler('normal')}>Normal</Button><br />\n        <Button size=\"menu\" onClick={() => startGameHandler('hard')}>Hard</Button><br /><br />\n        <button onClick={toggleStart}>Cancel</button>\n      </Modal>\n\n      <SideDrawer open={showSideDrawer} click={() => setShowSideDrawer(!showSideDrawer)}>\n        <h2>Menu</h2>\n        <Button size=\"menu\" onClick={toggleStart}>New Game</Button>\n        <Button size=\"menu\" onClick={() => {\n          props.incrementSkipped();\n          newGame(props.difficulty);\n        }}>Skip</Button>\n        <Button size=\"menu\" onClick={toggleAutoplay} on={gameSettings.isAutoplay}>Autosolve</Button>\n      </SideDrawer>\n\n      <div className={classes.Top}>\n        <div className={classes.Title}>Rubik's Slide</div>\n        <p>Press the arrows to shift and rotate the squares so that the design matches the target.</p>\n        <DrawerToggle click={() => setShowSideDrawer(!showSideDrawer)} />\n      </div>\n\n      <div className={classes.GridContainer}>\n        <div className={classes.Row}>\n          <ControlButton type=\"rotateLeft\" onClick={() => slide('rotateLeft')} disabled={game.isSolved} />\n          <ControlButton type=\"moveUp\" onClick={() => slide('moveUp')} disabled={game.isSolved} />\n          <ControlButton type=\"rotateRight\" onClick={() => slide('rotateRight')} disabled={game.isSolved} />\n        </div>\n        <div className={classes.CenterRow}>\n          <ControlButton type=\"moveLeft\" onClick={() => slide('moveLeft')} disabled={game.isSolved} />\n          <Grid matrix={game.matrix} movement={movement} isSolved={game.isSolved} />\n          <ControlButton type=\"moveRight\" onClick={() => slide('moveRight')} disabled={game.isSolved} />\n        </div>\n        <div className={classes.Row}>\n          <ControlButton type=\"moveDown\" onClick={() => slide('moveDown')} disabled={game.isSolved} />\n        </div>\n      </div>\n\n      <div className={classes.NextButton}>\n        {next}\n      </div>\n\n\n      <div className={classes.ControlBar}>\n        <div className={classes.Score}>\n          <div><strong>Solved</strong>: {props.numberSolved}</div>\n          <div><strong>Skipped</strong>: {props.numberSkipped}</div>\n          <div><strong>Moves Current Puzzle</strong>: {game.moveCount}</div>\n          {/* <div>Difficulty: {props.difficulty.charAt(0).toUpperCase() + props.difficulty.slice(1)}</div>\n          <div>Game ID: {game.gameId}</div> */}\n        </div>\n\n        <div className={classes.Panel}>\n          <div className={classes.TargetTitle}>Target</div>\n          <Grid matrix={gameRef.current.target} mini />\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    numberSolved: state.session.numberSolved,\n    numberSkipped: state.session.numberSkipped,\n    difficulty: state.session.difficulty\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setDifficulty: (difficulty) => dispatch(actions.setDifficulty(difficulty)),\n    incrementSkipped: () => dispatch(actions.incrementSkipped()),\n    incrementSolved: () => dispatch(actions.incrementSolved()),\n    initializeSession: () => dispatch(actions.initializeSession())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const setDifficulty = (difficulty) => {\r\n    let difficultyAction = actionTypes.SET_DIFFICULTY_NORMAL\r\n    \r\n    if (difficulty === 'hard') {\r\n        difficultyAction = actionTypes.SET_DIFFICULTY_HARD\r\n    }\r\n\r\n    return {\r\n        type: difficultyAction\r\n    }\r\n\r\n}\r\n\r\nexport const incrementSkipped = () => {\r\n    return {\r\n        type: actionTypes.INCREMENT_SKIPPED\r\n    }\r\n}\r\n\r\nexport const incrementSolved = () => {\r\n    return {\r\n        type: actionTypes.INCREMENT_SOLVED\r\n    }\r\n}\r\n\r\nexport const initializeSession = () => {\r\n    return {\r\n        type: actionTypes.INITIALIZE_SESSION\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    difficulty: 'normal',\r\n    numberSolved: 0,\r\n    numberSkipped: 0\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.INITIALIZE_SESSION:\r\n            return {\r\n                difficulty: 'normal',\r\n                numberSolved: 0,\r\n                numberSkipped: 0\r\n            }\r\n        case actionTypes.SET_DIFFICULTY_NORMAL:\r\n            return {\r\n                ...state,\r\n                difficulty: 'normal'\r\n            }\r\n        case actionTypes.SET_DIFFICULTY_HARD:\r\n            return {\r\n                ...state,\r\n                difficulty: 'hard'\r\n            }\r\n        case actionTypes.INCREMENT_SKIPPED:\r\n            let updatedSkipped = state.numberSkipped + 1;\r\n            return {\r\n                ...state,\r\n                numberSkipped: updatedSkipped\r\n            }\r\n        case actionTypes.INCREMENT_SOLVED:\r\n            let updatedASolved = state.numberSolved + 1;\r\n            return {\r\n                ...state,\r\n                numberSolved: updatedASolved\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport sessionReducer from './store/reducers/session';\n\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\n\nconst rootReducer = combineReducers({\n  session: sessionReducer\n})\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__F0HPs\",\"Top\":\"App_Top__22U5k\",\"Title\":\"App_Title__2_W2x\",\"GameId\":\"App_GameId__L9bOY\",\"GridContainer\":\"App_GridContainer__3_mmQ\",\"CenterRow\":\"App_CenterRow__3RO68\",\"NextButton\":\"App_NextButton__18o8k\",\"Row\":\"App_Row__2EGmM\",\"ControlBar\":\"App_ControlBar__2N48x\",\"ControlRow\":\"App_ControlRow__1s0Mp\",\"Score\":\"App_Score__W5_t0\",\"Spacer\":\"App_Spacer__3F9b4\",\"Panel\":\"App_Panel__1Fv_Y\",\"TargetTitle\":\"App_TargetTitle__2PpnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2xyKz\",\"Control\":\"Button_Control__3Q_qR\",\"Menu\":\"Button_Menu__1ZFQc\",\"Normal\":\"Button_Normal__1pDs1\",\"Next\":\"Button_Next__bQRYG\",\"On\":\"Button_On__2yxMw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Square\":\"Square_Square__3UJus\",\"MiniSquare\":\"Square_MiniSquare__398P5\",\"Blue\":\"Square_Blue__2JaSC\",\"Green\":\"Square_Green__2xakt\",\"Red\":\"Square_Red__iFuRe\",\"Yellow\":\"Square_Yellow__5izGy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3gkrX\",\"Open\":\"SideDrawer_Open__2VEvt\",\"Close\":\"SideDrawer_Close__3KCtU\",\"CloseButton\":\"SideDrawer_CloseButton__1U0sI\"};"],"sourceRoot":""}